basePath: /api
definitions:
  db.TableResponse:
    properties:
      data:
        items:
          additionalProperties: true
          type: object
        type: array
      meta:
        $ref: '#/definitions/db.tableResponseMeta'
    type: object
  db.property:
    properties:
      desc:
        type: boolean
      name:
        type: string
      remap:
        type: string
      table:
        type: string
    type: object
  db.tableResponseMeta:
    properties:
      available_props:
        items:
          $ref: '#/definitions/db.property'
        type: array
      count:
        type: integer
      included_props:
        items:
          $ref: '#/definitions/db.property'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  routes.TokenResponse:
    properties:
      token:
        type: string
      token_expire_at:
        type: string
    type: object
  tables.Node:
    properties:
      action_type:
        type: string
      app:
        type: string
      asset_env:
        type: string
      assetname:
        type: string
      bios_version:
        type: string
      cluster_id:
        type: string
      collector:
        type: string
      connect_to:
        type: string
      cpu_cores:
        type: integer
      cpu_dies:
        type: integer
      cpu_freq:
        type: integer
      cpu_model:
        type: string
      cpu_threads:
        type: integer
      cpu_vendor:
        type: string
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      enclosure:
        type: string
      enclosureslot:
        type: string
      fqdn:
        type: string
      hv:
        type: string
      hvpool:
        type: string
      hvvdc:
        type: string
      hw_obs_alert_date:
        type: string
      hw_obs_warn_date:
        type: string
      id:
        type: integer
      last_boot:
        type: string
      last_comm:
        type: string
      listener_port:
        type: integer
      loc_addr:
        type: string
      loc_building:
        type: string
      loc_city:
        type: string
      loc_country:
        type: string
      loc_floor:
        type: string
      loc_rack:
        type: string
      loc_room:
        type: string
      loc_zip:
        type: string
      maintenance_end:
        type: string
      manufacturer:
        type: string
      mem_banks:
        type: integer
      mem_bytes:
        type: integer
      mem_slots:
        type: integer
      model:
        type: string
      node_env:
        type: string
      node_frozen:
        type: boolean
      node_id:
        type: string
      nodename:
        type: string
      notifications:
        type: boolean
      os_arch:
        type: string
      os_concat:
        type: string
      os_kernel:
        type: string
      os_name:
        type: string
      os_obs_alert_date:
        type: string
      os_obs_warn_date:
        type: string
      os_release:
        type: string
      os_vendor:
        type: string
      power_breaker1:
        type: string
      power_breaker2:
        type: string
      power_cabinet1:
        type: string
      power_cabinet2:
        type: string
      power_protect:
        type: string
      power_protect_breaker:
        type: string
      power_supply_nb:
        type: integer
      role:
        type: string
      sec_zone:
        type: string
      serial:
        type: string
      snooze_till:
        type: string
      sp_version:
        type: string
      status:
        type: string
      team_integ:
        type: string
      team_responsible:
        type: string
      team_support:
        type: string
      type:
        type: string
      tz:
        type: string
      updated:
        type: string
      updated_at:
        type: string
      version:
        type: string
      warranty_end:
        type: string
    type: object
  tables.NodeTag:
    properties:
      created:
        type: string
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      node_id:
        type: string
      tag_attach_data:
        items:
          type: integer
        type: array
      tag_id:
        type: string
      updated_at:
        type: string
    type: object
  tables.Service:
    properties:
      cluster_id:
        type: string
      created:
        type: string
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      svc_app:
        type: string
      svc_avail_status:
        type: string
      svc_config_updated:
        type: string
      svc_env:
        type: string
      svc_flex_max_nodes:
        type: integer
      svc_flex_min_nodes:
        type: integer
      svc_flex_target:
        type: integer
      svc_frozen:
        type: string
      svc_ha:
        type: string
      svc_id:
        type: string
      svc_placement:
        type: string
      svc_provisioned:
        type: string
      svc_snooze_till:
        type: string
      svc_status:
        type: string
      svc_topology:
        type: string
      svc_wave:
        type: string
      svcname:
        type: string
      updated:
        type: string
      updated_at:
        type: string
    type: object
  tables.ServiceTag:
    properties:
      created:
        type: string
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      svc_id:
        type: string
      tag_attach_data:
        items:
          type: integer
        type: array
      tag_id:
        type: string
      updated_at:
        type: string
    type: object
  tables.Tag:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      tag_created:
        type: string
      tag_data:
        type: string
      tag_exclude:
        type: string
      tag_id:
        type: string
      tag_name:
        type: string
      updated_at:
        type: string
    type: object
  tables.User:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      email_log_level:
        type: string
      email_notifications:
        type: string
      first_name:
        type: string
      id:
        type: integer
      im_log_level:
        type: string
      im_notifications:
        type: string
      im_notifications_delay:
        type: integer
      im_type:
        type: string
      im_username:
        type: string
      last_name:
        type: string
      lock_filter:
        type: string
      password:
        type: string
      phone_work:
        type: string
      quota_app:
        type: integer
      quota_docker_registries:
        type: integer
      quota_org_group:
        type: integer
      registration_id:
        type: string
      registration_key:
        type: string
      reset_password_key:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: collector-api-contact@opensvc.com
    name: OpenSVC SAS
    url: https://www.opensvc.com
  description: Organization clusters, nodes, services and more.
  license:
    name: Apache License 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: OpenSVC collector API
  version: "1.0"
paths:
  /auth/node/token:
    get:
      description: Get an authentication token from a node's credentials submitted
        with basic login.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.TokenResponse'
        "403":
          description: Forbidden
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Get a node authentication token
      tags:
      - auth
  /auth/user/token:
    get:
      description: Get an authentication token from a user's credentials submitted
        with basic login.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.TokenResponse'
        "403":
          description: Forbidden
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Get a user authentication token
      tags:
      - auth
  /nodes:
    get:
      consumes:
      - application/json
      description: List nodes
      parameters:
      - description: properties to include, and optionally remap (comma separated)
        in: query
        name: props
        type: string
      - description: properties to group by (comma separated)
        in: query
        name: groupby
        type: string
      - description: properties to order by (comma separated, prefix with '~' to reverse)
        in: query
        name: order
        type: string
      - description: property value filter (a, !a, a&b, a|b, (a,b),  a%,  a%&!ab%)
        in: query
        items:
          type: string
        name: filters
        type: array
      - description: number of objets to include in response
        in: query
        name: limit
        type: integer
      - description: offset of the first objet to include in response
        in: query
        name: offset
        type: integer
      - description: turn off metadata in response
        in: query
        name: meta
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.TableResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: List nodes
      tags:
      - nodes
    post:
      consumes:
      - application/json
      description: |-
        The app code of the nodes is forced to one the user is responsible of.
        The team responsible of the nodes defaults to the user's primary group.
        The user must be in the NodeManager privilege group.
      parameters:
      - description: list of nodes to create or update
        in: body
        name: nodes
        required: true
        schema:
          items:
            $ref: '#/definitions/tables.Node'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tables.Node'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Create or update nodes
      tags:
      - nodes
  /nodes/{id}:
    delete:
      consumes:
      - application/json
      description: |-
        Delete a node by index, id or name.
        The user must have the NodeManager privilege.
        The user must be responsible for the node, via app responsibles.
        Cascade delete on services instances, dashboard entries, checks, packages and patches.
      parameters:
      - description: the index of the entry in database, or uuid, or name
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tables.Node'
            type: array
        "204":
          description: No Content
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Delete a node
      tags:
      - nodes
    get:
      consumes:
      - application/json
      description: Show a node by index, id or name
      parameters:
      - description: the index of the entry in database, or uuid, or name
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tables.Node'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Show a node
      tags:
      - nodes
    post:
      consumes:
      - application/json
      description: The user must be in the NodeManager privilege group.
      parameters:
      - description: the index of the entry in database, or uuid, or name
        in: path
        name: id
        required: true
        type: string
      - description: node properties to create or update
        in: body
        name: nodes
        required: true
        schema:
          $ref: '#/definitions/tables.Node'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tables.Node'
            type: array
        "401":
          description: missing NodeManager privilege
          schema:
            type: string
        "404":
          description: the entry to update does not exist
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Update a node
      tags:
      - nodes
  /nodes/{id}/candidate_tags:
    get:
      consumes:
      - application/json
      parameters:
      - description: properties to include, and optionally remap (comma separated)
        in: query
        name: props
        type: string
      - description: properties to group by (comma separated)
        in: query
        name: groupby
        type: string
      - description: properties to order by (comma separated, prefix with '~' to reverse)
        in: query
        name: order
        type: string
      - description: property value filter (a, !a, a&b, a|b, (a,b),  a%,  a%&!ab%)
        in: query
        items:
          type: string
        name: filters
        type: array
      - description: number of objets to include in response
        in: query
        name: limit
        type: integer
      - description: offset of the first objet to include in response
        in: query
        name: offset
        type: integer
      - description: turn off metadata in response
        in: query
        name: meta
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.TableResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: List existing tags not already attached to a node
      tags:
      - tags
  /nodes/{id}/tags:
    get:
      consumes:
      - application/json
      parameters:
      - description: properties to include, and optionally remap (comma separated)
        in: query
        name: props
        type: string
      - description: properties to group by (comma separated)
        in: query
        name: groupby
        type: string
      - description: properties to order by (comma separated, prefix with '~' to reverse)
        in: query
        name: order
        type: string
      - description: property value filter (a, !a, a&b, a|b, (a,b),  a%,  a%&!ab%)
        in: query
        items:
          type: string
        name: filters
        type: array
      - description: number of objets to include in response
        in: query
        name: limit
        type: integer
      - description: offset of the first objet to include in response
        in: query
        name: offset
        type: integer
      - description: turn off metadata in response
        in: query
        name: meta
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.TableResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: List tags attached to a node
      tags:
      - tags
  /nodes/{id}/tags/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: the index of the entry in database, or uuid, or name
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tables.NodeTag'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Show a tag attachment to a node
      tags:
      - tags
      - nodes
  /nodes/tags:
    get:
      consumes:
      - application/json
      parameters:
      - description: properties to include, and optionally remap (comma separated)
        in: query
        name: props
        type: string
      - description: properties to group by (comma separated)
        in: query
        name: groupby
        type: string
      - description: properties to order by (comma separated, prefix with '~' to reverse)
        in: query
        name: order
        type: string
      - description: property value filter (a, !a, a&b, a|b, (a,b),  a%,  a%&!ab%)
        in: query
        items:
          type: string
        name: filters
        type: array
      - description: number of objets to include in response
        in: query
        name: limit
        type: integer
      - description: offset of the first objet to include in response
        in: query
        name: offset
        type: integer
      - description: turn off metadata in response
        in: query
        name: meta
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.TableResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: List tags attachments to nodes
      tags:
      - tags
  /nodes/tags/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: the index of the entry in database, or uuid, or name
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tables.NodeTag'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Show a tag attachment to a node
      tags:
      - tags
      - nodes
  /services:
    get:
      consumes:
      - application/json
      parameters:
      - description: properties to include, and optionally remap (comma separated)
        in: query
        name: props
        type: string
      - description: properties to group by (comma separated)
        in: query
        name: groupby
        type: string
      - description: properties to order by (comma separated, prefix with '~' to reverse)
        in: query
        name: order
        type: string
      - description: property value filter (a, !a, a&b, a|b, (a,b),  a%,  a%&!ab%)
        in: query
        items:
          type: string
        name: filters
        type: array
      - description: number of objets to include in response
        in: query
        name: limit
        type: integer
      - description: offset of the first objet to include in response
        in: query
        name: offset
        type: integer
      - description: turn off metadata in response
        in: query
        name: meta
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.TableResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: List services
      tags:
      - services
  /services/{id}:
    get:
      consumes:
      - application/json
      description: Show a service by index, id or name
      parameters:
      - description: the index of the entry in database, or uuid, or name
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tables.Service'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Show a service
      tags:
      - services
  /services/{id}/candidate_tags:
    get:
      consumes:
      - application/json
      parameters:
      - description: properties to include, and optionally remap (comma separated)
        in: query
        name: props
        type: string
      - description: properties to group by (comma separated)
        in: query
        name: groupby
        type: string
      - description: properties to order by (comma separated, prefix with '~' to reverse)
        in: query
        name: order
        type: string
      - description: property value filter (a, !a, a&b, a|b, (a,b),  a%,  a%&!ab%)
        in: query
        items:
          type: string
        name: filters
        type: array
      - description: number of objets to include in response
        in: query
        name: limit
        type: integer
      - description: offset of the first objet to include in response
        in: query
        name: offset
        type: integer
      - description: turn off metadata in response
        in: query
        name: meta
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.TableResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: List existing tags not already attached to a service
      tags:
      - tags
  /services/{id}/tags:
    get:
      consumes:
      - application/json
      parameters:
      - description: properties to include, and optionally remap (comma separated)
        in: query
        name: props
        type: string
      - description: properties to group by (comma separated)
        in: query
        name: groupby
        type: string
      - description: properties to order by (comma separated, prefix with '~' to reverse)
        in: query
        name: order
        type: string
      - description: property value filter (a, !a, a&b, a|b, (a,b),  a%,  a%&!ab%)
        in: query
        items:
          type: string
        name: filters
        type: array
      - description: number of objets to include in response
        in: query
        name: limit
        type: integer
      - description: offset of the first objet to include in response
        in: query
        name: offset
        type: integer
      - description: turn off metadata in response
        in: query
        name: meta
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.TableResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: List tags attached to a service
      tags:
      - tags
  /services/{id}/tags/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: the index of the entry in database, or uuid, or name
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tables.ServiceTag'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Show a tag attachment to a service
      tags:
      - tags
      - services
  /services/tags:
    get:
      consumes:
      - application/json
      parameters:
      - description: properties to include, and optionally remap (comma separated)
        in: query
        name: props
        type: string
      - description: properties to group by (comma separated)
        in: query
        name: groupby
        type: string
      - description: properties to order by (comma separated, prefix with '~' to reverse)
        in: query
        name: order
        type: string
      - description: property value filter (a, !a, a&b, a|b, (a,b),  a%,  a%&!ab%)
        in: query
        items:
          type: string
        name: filters
        type: array
      - description: number of objets to include in response
        in: query
        name: limit
        type: integer
      - description: offset of the first objet to include in response
        in: query
        name: offset
        type: integer
      - description: turn off metadata in response
        in: query
        name: meta
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.TableResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: List tags attachments to services
      tags:
      - tags
  /services/tags/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: the index of the entry in database, or uuid, or name
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tables.ServiceTag'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Show a tag attachment to a service
      tags:
      - tags
      - services
  /tags:
    delete:
      consumes:
      - application/json
      description: Deleting tags requires the TagManager privilege.
      parameters:
      - description: property value filter (a, !a, a&b, a|b, (a,b),  a%,  a%&!ab%)
        in: query
        items:
          type: string
        name: filters
        type: array
      - description: properties to order by (comma separated, prefix with '~' to reverse)
        in: query
        name: order
        type: string
      - description: number of objets to include in response
        in: query
        name: limit
        type: integer
      - description: offset of the first objet to include in response
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tables.Tag'
            type: array
        "403":
          description: Forbidden
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Delete tags
      tags:
      - tags
    get:
      consumes:
      - application/json
      parameters:
      - description: properties to include, and optionally remap (comma separated)
        in: query
        name: props
        type: string
      - description: properties to group by (comma separated)
        in: query
        name: groupby
        type: string
      - description: properties to order by (comma separated, prefix with '~' to reverse)
        in: query
        name: order
        type: string
      - description: property value filter (a, !a, a&b, a|b, (a,b),  a%,  a%&!ab%)
        in: query
        items:
          type: string
        name: filters
        type: array
      - description: number of objets to include in response
        in: query
        name: limit
        type: integer
      - description: offset of the first objet to include in response
        in: query
        name: offset
        type: integer
      - description: turn off metadata in response
        in: query
        name: meta
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.TableResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: List tags
      tags:
      - tags
    post:
      consumes:
      - application/json
      description: Creating tags requires no privilege.
      parameters:
      - description: list of tags to create or update
        in: body
        name: tags
        required: true
        schema:
          items:
            $ref: '#/definitions/tables.Tag'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tables.Tag'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Create or update tags
      tags:
      - tags
  /tags/{id}:
    delete:
      consumes:
      - application/json
      description: |-
        Delete a tag by index, uuid or name.
        Requires the TagManager privilege.
        Cascade deletes the tag attachements to nodes and services.
      parameters:
      - description: the index of the entry in database, or uuid, or name
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tables.Tag'
            type: array
        "204":
          description: No Content
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Delete a tag
      tags:
      - tags
    get:
      consumes:
      - application/json
      parameters:
      - description: the index of the entry in database, or uuid, or name
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tables.Tag'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Show a tag
      tags:
      - tags
  /tags/{id}/nodes:
    get:
      consumes:
      - application/json
      parameters:
      - description: properties to include, and optionally remap (comma separated)
        in: query
        name: props
        type: string
      - description: properties to group by (comma separated)
        in: query
        name: groupby
        type: string
      - description: properties to order by (comma separated, prefix with '~' to reverse)
        in: query
        name: order
        type: string
      - description: property value filter (a, !a, a&b, a|b, (a,b),  a%,  a%&!ab%)
        in: query
        items:
          type: string
        name: filters
        type: array
      - description: number of objets to include in response
        in: query
        name: limit
        type: integer
      - description: offset of the first objet to include in response
        in: query
        name: offset
        type: integer
      - description: turn off metadata in response
        in: query
        name: meta
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.TableResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: List nodes having a specific tag
      tags:
      - tags
  /tags/{id}/services:
    get:
      consumes:
      - application/json
      parameters:
      - description: properties to include, and optionally remap (comma separated)
        in: query
        name: props
        type: string
      - description: properties to group by (comma separated)
        in: query
        name: groupby
        type: string
      - description: properties to order by (comma separated, prefix with '~' to reverse)
        in: query
        name: order
        type: string
      - description: property value filter (a, !a, a&b, a|b, (a,b),  a%,  a%&!ab%)
        in: query
        items:
          type: string
        name: filters
        type: array
      - description: number of objets to include in response
        in: query
        name: limit
        type: integer
      - description: offset of the first objet to include in response
        in: query
        name: offset
        type: integer
      - description: turn off metadata in response
        in: query
        name: meta
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.TableResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: List services having a specific tag
      tags:
      - tags
  /users:
    get:
      consumes:
      - application/json
      description: List users
      parameters:
      - description: properties to include, and optionally remap (comma separated)
        in: query
        name: props
        type: string
      - description: properties to group by (comma separated)
        in: query
        name: groupby
        type: string
      - description: properties to order by (comma separated, prefix with '~' to reverse)
        in: query
        name: order
        type: string
      - description: property value filter (a, !a, a&b, a|b, (a,b),  a%,  a%&!ab%)
        in: query
        items:
          type: string
        name: filters
        type: array
      - description: number of objets to include in response
        in: query
        name: limit
        type: integer
      - description: offset of the first objet to include in response
        in: query
        name: offset
        type: integer
      - description: turn off metadata in response
        in: query
        name: meta
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.TableResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: List users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: |-
        The user must be in the UserManager privilege group to modify tiers users properties.
        The user must be in the SelfManager privilege group to modify its user properties.
      parameters:
      - description: list of users to create or update
        in: body
        name: users
        required: true
        schema:
          items:
            $ref: '#/definitions/tables.User'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tables.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Create or update users
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by index, email or login
      parameters:
      - description: the index of the entry in database, or email, or login name
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tables.User'
            type: array
        "204":
          description: No Content
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Show a user by index, email or login
      parameters:
      - description: the index of the entry in database, or uuid, or name
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tables.User'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: Show a user
      tags:
      - users
  /users/{id}/apps/publication:
    get:
      consumes:
      - application/json
      description: |-
        Managers and UserManager are allowed to see all users' information.
        Others can only see information for users in their organization groups.
      parameters:
      - description: properties to include, and optionally remap (comma separated)
        in: query
        name: props
        type: string
      - description: properties to group by (comma separated)
        in: query
        name: groupby
        type: string
      - description: properties to order by (comma separated, prefix with '~' to reverse)
        in: query
        name: order
        type: string
      - description: property value filter (a, !a, a&b, a|b, (a,b),  a%,  a%&!ab%)
        in: query
        items:
          type: string
        name: filters
        type: array
      - description: number of objets to include in response
        in: query
        name: limit
        type: integer
      - description: offset of the first objet to include in response
        in: query
        name: offset
        type: integer
      - description: turn off metadata in response
        in: query
        name: meta
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.TableResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: List apps the user can read
      tags:
      - users
  /users/{id}/apps/responsible:
    get:
      consumes:
      - application/json
      description: |-
        Managers and UserManager are allowed to see all users' information.
        Others can only see information for users in their organization groups.
      parameters:
      - description: properties to include, and optionally remap (comma separated)
        in: query
        name: props
        type: string
      - description: properties to group by (comma separated)
        in: query
        name: groupby
        type: string
      - description: properties to order by (comma separated, prefix with '~' to reverse)
        in: query
        name: order
        type: string
      - description: property value filter (a, !a, a&b, a|b, (a,b),  a%,  a%&!ab%)
        in: query
        items:
          type: string
        name: filters
        type: array
      - description: number of objets to include in response
        in: query
        name: limit
        type: integer
      - description: offset of the first objet to include in response
        in: query
        name: offset
        type: integer
      - description: turn off metadata in response
        in: query
        name: meta
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.TableResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: List apps the user is a responsible of
      tags:
      - users
  /users/{id}/groups:
    get:
      consumes:
      - application/json
      description: |-
        Managers and UserManager are allowed to see all users' information.
        Others can only see information for users in their organization groups.
      parameters:
      - description: properties to include, and optionally remap (comma separated)
        in: query
        name: props
        type: string
      - description: properties to group by (comma separated)
        in: query
        name: groupby
        type: string
      - description: properties to order by (comma separated, prefix with '~' to reverse)
        in: query
        name: order
        type: string
      - description: property value filter (a, !a, a&b, a|b, (a,b),  a%,  a%&!ab%)
        in: query
        items:
          type: string
        name: filters
        type: array
      - description: number of objets to include in response
        in: query
        name: limit
        type: integer
      - description: offset of the first objet to include in response
        in: query
        name: offset
        type: integer
      - description: turn off metadata in response
        in: query
        name: meta
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.TableResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      - BearerAuth: []
      summary: List groups the user is a member of
      tags:
      - users
securityDefinitions:
  BasicAuth:
    type: basic
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
